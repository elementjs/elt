
/**
 * A more global and permissive event map made to create helpers for setting up elements
 */
export interface AllEventMap<ET extends EventTarget = HTMLElement> {
  "abort": ET extends FileReader ? ProgressEvent<FileReader> : ET extends XMLHttpRequestEventTarget ? ProgressEvent<XMLHttpRequestEventTarget> : Event
  "addsourcebuffer": Event
  "addtrack": Event
  "audioprocess": AudioProcessingEvent
  "blocked": Event
  "boundary": SpeechSynthesisEvent
  "bufferedamountlow": Event
  "cancel": AnimationPlaybackEvent
  "change": MediaQueryListEvent
  "click": Event
  "close": CloseEvent
  "complete": OfflineAudioCompletionEvent
  "connect": Event
  "connecting": Event
  "connectionstatechange": Event
  "controllerchange": Event
  "cuechange": Event
  "dataavailable": BlobEvent
  "datachannel": RTCDataChannelEvent
  "devicechange": Event
  "devicemotion": DeviceMotionEvent
  "deviceorientation": DeviceOrientationEvent
  "disconnect": Event
  "encrypted": MediaEncryptedEvent
  "end": SpeechSynthesisEvent
  "ended": Event
  "enter": Event
  "enterpictureinpicture": Event
  "error": ET extends AbstractWorker ? ErrorEvent : ET extends FileReader ? ProgressEvent<FileReader> : ET extends MediaRecorder ? MediaRecorderErrorEvent : ET extends SpeechSynthesisUtterance ? SpeechSynthesisErrorEvent : ET extends XMLHttpRequestEventTarget ? ProgressEvent<XMLHttpRequestEventTarget> : Event
  "exit": Event
  "finish": AnimationPlaybackEvent
  "fullscreenchange": Event
  "fullscreenerror": Event
  "gamepadconnected": GamepadEvent
  "gamepaddisconnected": GamepadEvent
  "icecandidate": RTCPeerConnectionIceEvent
  "icecandidateerror": Event
  "iceconnectionstatechange": Event
  "icegatheringstatechange": Event
  "keystatuseschange": Event
  "leavepictureinpicture": Event
  "load": Event
  "loadend": Event
  "loading": Event
  "loadingdone": Event
  "loadingerror": Event
  "loadstart": Event
  "mark": SpeechSynthesisEvent
  "message": Event
  "messageerror": Event
  "mute": Event
  "negotiationneeded": Event
  "open": Event
  "orientationchange": Event
  "pause": SpeechSynthesisEvent
  "paymentmethodchange": Event
  "pointerlockchange": Event
  "pointerlockerror": Event
  "processorerror": Event
  "progress": Event
  "readystatechange": Event
  "remove": Event
  "removesourcebuffer": Event
  "removetrack": Event
  "resize": Event
  "resourcetimingbufferfull": Event
  "resume": SpeechSynthesisEvent
  "scroll": Event
  "show": Event
  "signalingstatechange": Event
  "sourceclose": Event
  "sourceended": Event
  "sourceopen": Event
  "start": SpeechSynthesisEvent
  "statechange": Event
  "stop": Event
  "success": Event
  "timeout": ProgressEvent<XMLHttpRequestEventTarget>
  "tonechange": RTCDTMFToneChangeEvent
  "track": RTCTrackEvent
  "unmute": Event
  "update": Event
  "updateend": Event
  "updatefound": Event
  "updatestart": Event
  "upgradeneeded": IDBVersionChangeEvent
  "versionchange": IDBVersionChangeEvent
  "visibilitychange": Event
  "voiceschanged": Event
  "waitingforkey": Event
}
